version: '3.9'

services:

  mysql:
    container_name: app_mysql
    image: mysql:latest
    ports:
      - "7000:${DB_PORT}"
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_PORT=${DB_PORT}
    networks:
      app-network:
    volumes:
      - ./data/db/mysql:/var/lib/mysql
      - ./data/db/conf.d:/etc/mysql/conf.d
      - ./data/db/logs:/logs:ro
      # - ./data/db/mysql/mysql_lib:/var/lib/mysql
    restart: always

  service-master:
    image: main-service
    container_name: service_master
    build:
      args:
        user: ${MAIN_SERVICE_USER}
        uid: ${MAIN_SERVICE_ID}
      dockerfile: ./data/docker/DockerFile
    depends_on:
      - mysql
    networks:
      app-network:
    volumes:
      - app-service:/var/www/app-service/
    restart: always

  service-worker-1:
    image: main-service
    container_name: service_worker_1
    depends_on:
      - mysql
    networks:
      app-network:
    volumes:
      - app-service:/var/www/app-service/
    restart: always

  service-worker-2:
    image: main-service
    container_name: service_worker_2
    depends_on:
      - mysql
    networks:
      app-network:
    volumes:
      - app-service:/var/www/app-service/
    restart: always

  nginx:
    image: nginx:latest
    container_name: app_nginx
    ports:
      - "8000:80"
    depends_on:
      - service-master
    networks:
      app-network:
    volumes:
      - ./data/nginx/config:/etc/nginx/conf.d
    restart: always

  redis:
    image: redis:latest
    container_name: app_redis
    networks:
      app-network:
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}

networks:
  app-network:

volumes:
  app-service: