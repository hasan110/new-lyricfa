FROM php:8.2.3-fpm

ARG user
ARG uid
ARG db_host
ARG db_port
ARG db_database
ARG db_username
ARG db_password
ARG queue_connection
ARG redis_host
ARG redis_password
ARG redis_port
ARG cache_driver

VOLUME lyricfa-service /var/www/lyricfa-service/

RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    zip \
    unzip

RUN apt-get clean && rm -rf /var/lib/apt/lists/*

RUN pecl install redis && docker-php-ext-enable redis

RUN docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath gd soap

COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

RUN useradd -G www-data,root -u $uid -d /home/$user $user
RUN mkdir -p /home/$user/.composer && \
    chown -R $user:$user /home/$user

COPY ./src /var/www/lyricfa-service/
# COPY ./src/.env.example /var/www/app-service/.env

RUN chmod 777 -R /var/www/lyricfa-service/storage/ && \
    chown -R www-data:www-data /var/www/lyricfa-service

ENV COMPOSER_ALLOW_SUPERUSER=1

WORKDIR /var/www/lyricfa-service

ENV LYRIC_MAIN_DB_HOST=${db_host}
ENV LYRIC_MAIN_DB_PORT=${db_port}
ENV LYRIC_MAIN_DB_DATABASE=${db_database}
ENV LYRIC_MAIN_DB_USERNAME=${db_username}
ENV LYRIC_MAIN_DB_PASSWORD=${db_password}
ENV REDIS_HOST=${redis_host}
ENV REDIS_PASSWORD=${redis_password}
ENV REDIS_PORT=${redis_port}

RUN composer install --prefer-dist --no-interaction && \
    php artisan optimize:clear && \
    php artisan config:cache && \
    php artisan route:cache

ENV CACHE_DRIVER=${cache_driver}

USER $user

ENTRYPOINT php artisan serve --port=8000 --host=0.0.0.0

EXPOSE 8000